{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\real-time-chat\\\\src\\\\components\\\\chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { Context } from \"../index\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { Avatar, Button, Container, Grid, TextField } from \"@material-ui/core\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport Loader from \"./Loader\";\nimport firebase from \"firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  _s();\n\n  const {\n    auth,\n    firestore\n  } = useContext(Context);\n  const [user] = useAuthState(auth);\n  const [value, setValue] = useState(\"\");\n  const [messages, loading] = useCollectionData(firestore.collection('messages').orderBy(\"createdAt\"));\n\n  const sendMessage = async () => {\n    firestore.collection(\"messages\").add({\n      uid: user.uid,\n      displayName: user.displayName,\n      photoUrl: user.photoURL,\n      text: value,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setValue('');\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      style: {\n        height: window.innerHeight - 50,\n        marginTop: \"20px\"\n      },\n      container: true,\n      justify: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"80%\",\n          height: \"60vh\",\n          border: \"1px solid black\",\n          overflowY: \"auto\"\n        },\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: 10,\n            border: user.uid === message.uid ? \"2px solid green\" : \"2px dashed red\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              src: message.photoUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: message.displayName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this), message.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        alignItems: \"flex-end\",\n        style: {\n          width: \"80%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          rowsMax: 2,\n          variant: \"outlined\",\n          value: value,\n          onChange: e => setValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: sendMessage,\n          variant: \"outlined\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"3giZ48POQY8oF/ZGqgicb0DPm+M=\", false, function () {\n  return [useAuthState, useCollectionData];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["D:/projects/real-time-chat/src/components/chat.js"],"names":["React","useContext","useState","Context","useAuthState","Avatar","Button","Container","Grid","TextField","useCollectionData","Loader","firebase","Chat","auth","firestore","user","value","setValue","messages","loading","collection","orderBy","sendMessage","add","uid","displayName","photoUrl","photoURL","text","createdAt","FieldValue","serverTimestamp","height","window","innerHeight","marginTop","width","border","overflowY","map","message","margin","e","target"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from 'react';\r\nimport {Context} from \"../index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport {Avatar, Button, Container, Grid, TextField} from \"@material-ui/core\";\r\nimport {useCollectionData} from \"react-firebase-hooks/firestore\";\r\nimport Loader from \"./Loader\";\r\nimport firebase from \"firebase\";\r\n\r\nconst Chat = () => {\r\n    const {auth, firestore} = useContext(Context)\r\n    const [user] = useAuthState(auth)\r\n    const [value, setValue] = useState(\"\");\r\n    const [messages, loading] = useCollectionData(\r\n        firestore.collection('messages').orderBy(\"createdAt\")\r\n    )\r\n\r\n    const sendMessage = async () => {\r\n        firestore.collection(\"messages\").add({\r\n            uid: user.uid,\r\n            displayName: user.displayName,\r\n            photoUrl: user.photoURL,\r\n            text: value,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        setValue('')\r\n    }\r\n\r\n    if(loading) return <Loader/>\r\n\r\n    return (\r\n        <Container>\r\n            <Grid style={{height: window.innerHeight - 50, marginTop: \"20px\"}} container justify={\"center\"}>\r\n                <div style={{width: \"80%\", height: \"60vh\", border: \"1px solid black\", overflowY: \"auto\"}}>\r\n                    {messages.map(message =>\r\n                        <div style={{margin: 10, border: user.uid === message.uid ? \"2px solid green\" : \"2px dashed red\", }}>\r\n                            <Grid container>\r\n                                <Avatar src={message.photoUrl}/>\r\n                                <div>{message.displayName}</div>\r\n                                {message.text}\r\n                            </Grid>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                    <Grid\r\n                        container\r\n                        direction={\"column\"}\r\n                        alignItems={\"flex-end\"}\r\n                        style={{width: \"80%\"}}\r\n                    >\r\n                        <TextField\r\n                            fullWidth\r\n                            rowsMax={2}\r\n                            variant={\"outlined\"}\r\n                            value={value}\r\n                            onChange={e => setValue(e.target.value)}\r\n                        />\r\n                        <Button onClick={sendMessage} variant={\"outlined\"}>Send</Button>\r\n                    </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}